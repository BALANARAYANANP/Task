import React, { useState, useEffect } from "react";
import axios from "axios";
import './App.css'

const App = () => {
  const [name, setName] = useState("");
  const [phone, setPhone] = useState("");
  const [contacts, setContacts] = useState([]);
  const [editIndex, setEditIndex] = useState(null);

  const API_URL = "http://localhost:5000/contacts"; // Backend URL

  // Fetch contacts from the backend
  const fetchContacts = async () => {
    try {
      const response = await axios.get(API_URL);
      setContacts(response.data);
    } catch (error) {
      console.error("Error fetching contacts:", error);
    }
  };

  // Handle form submission
  const handleSubmit = async (e) => {
    e.preventDefault();
    if (name && phone) {
      if (editIndex !== null) {
        // Update existing contact
        await axios.put(`${API_URL}/${contacts[editIndex]._id}`, { name, phone });
        setEditIndex(null); // Reset after editing
      } else {
        // Add new contact
        await axios.post(API_URL, { name, phone });
      }
      setName("");
      setPhone("");
      fetchContacts(); // Refresh contacts list
    } else {
      alert("Please fill out both fields");
    }
  };

  // Handle Edit
  const handleEdit = (index) => {
    setName(contacts[index].name);
    setPhone(contacts[index].phone);
    setEditIndex(index);
  };

  // Handle Delete
  const handleDelete = async (id) => {
    const response = alert("Are you sure want to delete this item")
    if(!response == true)
    {
    await axios.delete(`${API_URL}/${id}`);
    fetchContacts(); }// Refresh contacts list after deletion
  };

  // Fetch contacts when the component mounts
  useEffect(() => {
    fetchContacts();
  }, []);

  return (
    <div style={{ padding: "20px", fontFamily: "Arial, sans-serif" }}>
      <h2>{editIndex !== null ? "Edit Contact" : "Add Contact"}</h2>
      <form onSubmit={handleSubmit} style={{ marginBottom: "20px" }}>
        <div>
          <label>
            Name:
            <input
              type="text"
              value={name}
              onChange={(e) => setName(e.target.value)}
              style={{ marginLeft: "10px", marginBottom: "10px" }}
            />
          </label>
        </div>
        <div>
          <label>
            Phone:
            <input
              type="text"
              value={phone}
              onChange={(e) => setPhone(e.target.value)}
              style={{ marginLeft: "10px" }}
            />
          </label>
        </div>
        {/* <button type="submit" style={{ marginTop: "10px" }}>
          {editIndex !== null ? "Save Changes" : "Add"}
        </button> */}
            {editIndex !== 0  ? <>
                                <div className='d-flex gap-2' style={{marginLeft:"135px"}}>

                                    <button className='btn btn-warning'>Add</button>
                             </div> </> : <>
                                <div className='d-flex gap-2' style={{marginLeft:"10px"}}>

                                    <button className='btn btn-warning'>Save Changes</button>
                                    <button className='btn btn-danger' style={{marginLeft:"10px"}}>Cancel</button></div>
                            </>}
      </form>
      {/* {editId == 0 || editId !== item._id ? <>
                                <div className='d-flex gap-2'>

                                    <button className='btn btn-warning' onClick={() => handleEdit(item)} >Edit</button>
                                    <button className='btn btn-danger' onClick={() => handleDelete(item._id)}>Delete</button></div> </> : <>
                                <div className='d-flex gap-2'>

                                    <button className='btn btn-warning' onClick={handleUpdate}>Update</button>
                                    <button className='btn btn-danger' onClick={() => handleCancel()}>Cancel</button></div>
                            </>} */}

      <h3>Contact List</h3>
      <table border="1" style={{ width: "100%", borderCollapse: "collapse" }}>
        <thead>
          <tr>
            <th style={{ padding: "10px" }}>Name</th>
            <th style={{ padding: "10px" }}>Phone</th>
            <th style={{ padding: "10px" }}>Actions</th>
          </tr>
        </thead>
        <tbody>
          {contacts.map((contact, index) => (
            <tr key={contact._id}>
              <td style={{ padding: "10px" }}>{contact.name}</td>
              <td style={{ padding: "10px" }}>{contact.phone}</td>
              <td style={{ padding: "10px" }}>
                <button
                  onClick={() => handleEdit(index)}
                  style={{ marginRight: "10px" }}
                >
                  Edit
                </button>
                <button  style={{backgroundColor:"red"}} onClick={() => handleDelete(contact._id)}>Delete</button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default App;



body {
  font-family: Arial, sans-serif;
  background-color: #f4f7fa;
  margin: 0;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
}

.container {
  width: 80%;
  max-width: 800px;
  background-color: #ffffff;
  padding: 30px;
  border-radius: 8px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
}

h2, h3 {
  color: #333;
  font-size: 1.8rem;
  margin-bottom: 20px;
  text-align: center;
}

form {
  display: flex;
  flex-direction: column;
  margin-bottom: 20px;
}

label {
  font-size: 1.1rem;
  margin-bottom: 5px;
  color: #555;
}

input {
  padding: 8px;
  font-size: 1rem;
  margin-bottom: 15px;
  border: 1px solid #ddd;
  border-radius: 4px;
  outline: none;
  transition: border-color 0.3s ease;
}

input:focus {
  border-color: #007bff;
}

button {
  padding: 10px;
  font-size: 1rem;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

button:hover {
  background-color: #0056b3;
}

table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 20px;
}

th, td {
  padding: 12px;
  text-align: left;
  border: 1px solid #ddd;
}

th {
  background-color: #f4f7fa;
  font-weight: bold;
  color: #333;
}

td {
  background-color: #fff;
  color: #555;
}

button.edit-btn, button.delete-btn {
  padding: 6px 12px;
  font-size: 0.9rem;
  border-radius: 4px;
  cursor: pointer;
}

button.edit-btn {
  background-color: #ffc107;
  color: #333;
  border: none;
  margin-right: 10px;
}

button.delete-btn {
  background-color: #dc3545;
  color: #fff;
  border: none;
}

button.edit-btn:hover {
  background-color: #e0a800;
}

button.delete-btn:hover {
  background-color: #c82333;
}





body {
  font-family: Arial, sans-serif;
  background-color: #f4f7fa;
  margin: 0;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
}

.container {
  width: 80%;
  max-width: 800px;
  background-color: #ffffff;
  padding: 30px;
  border-radius: 8px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
}

h2, h3 {
  color: #333;
  font-size: 1.8rem;
  margin-bottom: 20px;
  text-align: center;
}

form {
  display: flex;
  flex-direction: column;
  margin-bottom: 20px;
}

label {
  font-size: 1.1rem;
  margin-bottom: 5px;
  color: #555;
}

input {
  padding: 8px;
  font-size: 1rem;
  margin-bottom: 15px;
  border: 1px solid #ddd;
  border-radius: 4px;
  outline: none;
  transition: border-color 0.3s ease;
}

input:focus {
  border-color: #007bff;
}

button {
  padding: 10px;
  font-size: 1rem;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

button:hover {
  background-color: #0056b3;
}

table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 20px;
}

th, td {
  padding: 12px;
  text-align: left;
  border: 1px solid #ddd;
}

th {
  background-color: #f4f7fa;
  font-weight: bold;
  color: #333;
}

td {
  background-color: #fff;
  color: #555;
}

button.edit-btn, button.delete-btn {
  padding: 6px 12px;
  font-size: 0.9rem;
  border-radius: 4px;
  cursor: pointer;
}

button.edit-btn {
  background-color: #ffc107;
  color: #333;
  border: none;
  margin-right: 10px;
}

button.delete-btn {
  background-color: #dc3545;
  color: #fff;
  border: none;
}

button.edit-btn:hover {
  background-color: #e0a800;
}

button.delete-btn:hover {
  background-color: #c82333;
}

